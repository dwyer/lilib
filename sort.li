(define (make-sort less? greater?)
  (define (sort lst)
    (if (null? lst)
      '()
      (iter (car lst) (cdr lst) '() '() '())))
  (define (iter piv lst less equal greater)
    (cond ((null? lst)
           (append (sort less) (cons piv equal) (sort greater)))
          ((less? (car lst) piv)
           (iter piv (cdr lst) (cons (car lst) less) equal greater))
          ((greater? (car lst) piv)
           (iter piv (cdr lst) less equal (cons (car lst) greater)))
          (else
            (iter piv (cdr lst) less (cons (car lst) equal) greater))))
  sort)

(define char-sort (make-sort char<? char>?))
(define number-sort (make-sort < >))
(define string-sort (make-sort string<? string>?))
